---
title: "mtcars_exploration.qmd"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(here)
library(tidyverse)
```

You can add options to executable code like this

```{r}
mtcars_df <- read.csv(here("data/mtcars.csv"))
head(mtcars_df)
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
library(ggplot2)

# Scatter plot with regression line
ggplot(mtcars, aes(x = wt, y = mpg)) +
  geom_point(color = "blue", size = 3) +  # blue points
  geom_smooth(method = "lm", col = "red", se = FALSE, linetype = "solid") +
  labs(title = "Scatter Plot of Weight vs MPG",
       x = "Weight (1000 lbs)",
       y = "Miles per Gallon") +
  theme_minimal()
```

```{r}
library(ggplot2)

ggplot(mtcars, aes(x = wt, y = mpg, color = as.factor(cyl))) +
  geom_point(size = 3) +
  labs(title = "Scatter Plot of Weight vs MPG",
       x = "Weight (1000 lbs)",
       y = "Miles per Gallon",
       color = "Cylinders") +
  theme_minimal()
       title = "Cylinders")
```

```{r}
library(ggplot2)

ggplot(mtcars, aes(x = mpg)) +
  geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +
  labs(title = "Histogram of Miles per Gallon",
       x = "Miles per Gallon",
       y = "Frequency") +
  theme_minimal()
```

```{r}
mtcars_df <- mtcars_df %>%
  separate(make_model, into = c("make", "model"), sep = " ", extra = "merge")

head(mtcars_df)
```

```{r}
ggplot(mtcars_df, aes(x = reorder(make, mpg, FUN = median), y = mpg)) +
  geom_boxplot(outlier.shape = NA, fill = "lightgray") +   # boxplot
  geom_jitter(width = 0.2, aes(color = make), size = 2) +  # jittered points
  labs(title = "Miles per Gallon by Make",
       x = "Make",
       y = "Miles per Gallon") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) # rotate labels
```
